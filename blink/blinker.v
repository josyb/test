// File: blinker.v
// Generated by MyHDL 0.10
// Date: Sat Aug  4 15:08:39 2018


`timescale 1ns/10ps

module blinker (
    clk,
    leds
);


input clk;
output [0:0] leds;
wire [0:0] leds;

reg [22:0] blink0_clk_cnt;
reg blink0_strobe;
reg [0:0] blink0_led_mem;



always @(posedge clk) begin: BLINKER_BLINK0_BEH_STROBE
    if (($signed({1'b0, blink0_clk_cnt}) >= (5000000 - 1))) begin
        blink0_clk_cnt <= 0;
        blink0_strobe <= (!blink0_strobe);
        if (blink0_strobe) begin
            blink0_led_mem <= 0;
            $write("%h", $time);
            $write(" change!");
            $write("%h", str(blink0_led_mem));
            $write("\n");
        end
        else begin
            blink0_led_mem <= (2 - 1);
            $write("%h", $time);
            $write(" change!");
            $write("%h", str(blink0_led_mem));
            $write("\n");
        end
    end
    else begin
        blink0_clk_cnt <= (blink0_clk_cnt + 1);
    end
end



assign leds = blink0_led_mem;

endmodule
