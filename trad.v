// File: trad.v
// Generated by MyHDL 0.10
// Date: Sat Aug  4 12:33:54 2018


`timescale 1ns/10ps

module trad (
    c,
    l
);


input c;
output [7:0] l;
wire [7:0] l;

reg shift0_ltr;
reg [22:0] shift0_clk_cnt;
reg [7:0] shift0_led_mem;



always @(posedge c) begin: TRAD_SHIFT0_BEH_STROBE
    if (($signed({1'b0, shift0_clk_cnt}) >= (5000000 - 1))) begin
        shift0_clk_cnt <= 0;
        $write("%h", $time);
        $write(" led change!");
        $write("%h", str(shift0_led_mem));
        $write("\n");
        if (shift0_ltr) begin
            shift0_led_mem <= (shift0_led_mem << 1);
        end
        else begin
            shift0_led_mem <= (shift0_led_mem >>> 1);
        end
        if ((shift0_led_mem == (1 << 1))) begin
            shift0_ltr <= 1;
            $write("%h", $time);
            $write(" dir change!  go 1");
            $write("\n");
        end
        if (($signed({1'b0, shift0_led_mem}) == (1 << (8 - 2)))) begin
            shift0_ltr <= 0;
            $write("%h", $time);
            $write(" dir change!  go 0");
            $write("\n");
        end
    end
    else begin
        shift0_clk_cnt <= (shift0_clk_cnt + 1);
    end
end



assign l = shift0_led_mem;

endmodule
